
project hardware/libhardware_legacy/
diff --git a/hardware/libhardware_legacy/wifi/Android.mk b/hardware/libhardware_legacy/wifi/Android.mk
index 3b89a17..82aa0b7 100644
--- a/hardware/libhardware_legacy/wifi/Android.mk
+++ b/hardware/libhardware_legacy/wifi/Android.mk
@@ -3,6 +3,25 @@
 LOCAL_CFLAGS += -DCONFIG_CTRL_IFACE_CLIENT_DIR=\"/data/misc/wifi/sockets\"
 LOCAL_CFLAGS += -DCONFIG_CTRL_IFACE_CLIENT_PREFIX=\"wpa_ctrl_\"
 
+ifdef WIFI_DRIVER_MODULE_PATH_DHD
+LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_PATH_DHD=\"$(WIFI_DRIVER_MODULE_PATH_DHD)\"
+endif
+ifdef WIFI_DRIVER_MODULE_NAME_DHD
+LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_NAME_DHD=\"$(WIFI_DRIVER_MODULE_NAME_DHD)\"
+endif
+ifdef WIFI_DRIVER_MODULE_ARG_DHD
+LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_ARG_DHD=\"$(WIFI_DRIVER_MODULE_ARG_DHD)\"
+endif
+ifdef WIFI_DRIVER_FW_PATH_STA_DHD
+LOCAL_CFLAGS += -DWIFI_DRIVER_FW_PATH_STA_DHD=\"$(WIFI_DRIVER_FW_PATH_STA_DHD)\"
+endif
+ifdef WIFI_DRIVER_FW_PATH_AP_DHD
+LOCAL_CFLAGS += -DWIFI_DRIVER_FW_PATH_AP_DHD=\"$(WIFI_DRIVER_FW_PATH_AP_DHD)\"
+endif
+ifdef WIFI_DRIVER_FW_PATH_P2P_DHD
+LOCAL_CFLAGS += -DWIFI_DRIVER_FW_PATH_P2P_DHD=\"$(WIFI_DRIVER_FW_PATH_P2P_DHD)\"
+endif
+
 ifdef WIFI_DRIVER_MODULE_PATH
 LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_PATH=\"$(WIFI_DRIVER_MODULE_PATH)\"
 endif
@@ -46,4 +65,10 @@ ifeq ($(BOARD_HAVE_SAMSUNG_WIFI),true)
     LOCAL_CFLAGS += -DSAMSUNG_WIFI
 endif
 
+ifeq ($(BOARD_USE_XIAOMI_MIONE_WIFI),true)
+    LOCAL_CFLAGS += -DXIAOMI_MIONE_WIFI
+    LOCAL_SHARED_LIBRARIES += libnv liboncrpc
+    LOCAL_STATIC_LIBRARIES += libreadmac
+endif
+
 LOCAL_SHARED_LIBRARIES += libnetutils
diff --git a/hardware/libhardware_legacy/wifi/wifi.c b/hardware/libhardware_legacy/wifi/wifi.c
index 656659f..45b0731 100644
--- a/hardware/libhardware_legacy/wifi/wifi.c
+++ b/hardware/libhardware_legacy/wifi/wifi.c
@@ -83,6 +83,16 @@ static char primary_iface[PROPERTY_VALUE_MAX];
 #define WIFI_DRIVER_FW_PATH_P2P		NULL
 #endif
 
+#ifndef WIFI_DRIVER_FW_PATH_STA_DHD
+#define WIFI_DRIVER_FW_PATH_STA_DHD		NULL
+#endif
+#ifndef WIFI_DRIVER_FW_PATH_AP_DHD
+#define WIFI_DRIVER_FW_PATH_AP_DHD		NULL
+#endif
+#ifndef WIFI_DRIVER_FW_PATH_P2P_DHD
+#define WIFI_DRIVER_FW_PATH_P2P_DHD		NULL
+#endif
+
 #ifdef WIFI_EXT_MODULE_NAME
 static const char EXT_MODULE_NAME[] = WIFI_EXT_MODULE_NAME;
 #ifdef WIFI_EXT_MODULE_ARG
@@ -101,10 +111,22 @@ static const char EXT_MODULE_PATH[] = WIFI_EXT_MODULE_PATH;
 
 static const char IFACE_DIR[]           = "/data/system/wpa_supplicant";
 #ifdef WIFI_DRIVER_MODULE_PATH
+#ifndef XIAOMI_MIONE_WIFI
 static const char DRIVER_MODULE_NAME[]  = WIFI_DRIVER_MODULE_NAME;
 static const char DRIVER_MODULE_TAG[]   = WIFI_DRIVER_MODULE_NAME " ";
 static const char DRIVER_MODULE_PATH[]  = WIFI_DRIVER_MODULE_PATH;
 static const char DRIVER_MODULE_ARG[]   = WIFI_DRIVER_MODULE_ARG;
+#else
+/* WIFI_DRIVER_MODULE_ARG_DHD is longer than WIFI_DRIVER_MODULE_ARG */
+static char DRIVER_MODULE_NAME[]  = WIFI_DRIVER_MODULE_NAME;
+static char DRIVER_MODULE_TAG[]   = WIFI_DRIVER_MODULE_NAME " ";
+static char DRIVER_MODULE_PATH[]  = WIFI_DRIVER_MODULE_PATH;
+static char DRIVER_MODULE_ARG[]   = WIFI_DRIVER_MODULE_ARG_DHD;
+static const char DRIVER_MODULE_NAME_DHD[]  = WIFI_DRIVER_MODULE_NAME_DHD;
+static const char DRIVER_MODULE_TAG_DHD[]   = WIFI_DRIVER_MODULE_NAME_DHD " ";
+static const char DRIVER_MODULE_PATH_DHD[]  = WIFI_DRIVER_MODULE_PATH_DHD;
+static const char DRIVER_MODULE_ARG_DHD[]   = WIFI_DRIVER_MODULE_ARG;
+#endif  /* XIAOMI_MIONE_WIFI */
 #endif
 static const char FIRMWARE_LOADER[]     = WIFI_FIRMWARE_LOADER;
 static const char DRIVER_PROP_NAME[]    = "wlan.driver.status";
@@ -129,6 +151,49 @@ static char supplicant_name[PROPERTY_VALUE_MAX];
 /* Is either SUPP_PROP_NAME or P2P_PROP_NAME */
 static char supplicant_prop_name[PROPERTY_KEY_MAX];
 
+#ifdef WIFI_DRIVER_MODULE_PATH
+#ifdef XIAOMI_MIONE_WIFI
+extern const unsigned char *read_mac();
+static char module_arg_buf[192];
+static int read_mac_ok = 0;
+static int is_wifi_module_4330 = 0xff;
+
+static void check_wifi_module (void)
+{
+    const char path[] = "/sys/wifi_properties/wifi_module";
+    char wifi_module[20];
+    int fd;
+
+    if (0xff == is_wifi_module_4330) {
+        fd = open(path, O_RDONLY);
+        if (fd < 0) {
+            ALOGE("unable to open %s: %s", path, strerror(errno));
+            return ;
+        }
+
+        if (read(fd, wifi_module, sizeof(wifi_module)) < 0) {
+            ALOGE("read %s failed: %s", path, strerror(errno));
+            close(fd);
+            return ;
+        }
+
+        if (0 == strncmp(wifi_module, "wifi_module=4330", 16)) {
+            is_wifi_module_4330 = 1;
+            strcpy(DRIVER_MODULE_NAME, DRIVER_MODULE_NAME_DHD);
+            strcpy(DRIVER_MODULE_TAG, DRIVER_MODULE_TAG_DHD);
+            strcpy(DRIVER_MODULE_PATH, DRIVER_MODULE_PATH_DHD);
+        } else {
+            is_wifi_module_4330 = 0;
+            strcpy(DRIVER_MODULE_ARG, DRIVER_MODULE_ARG_DHD);
+        }
+
+        ALOGW("is_wifi_module_4330: %d", is_wifi_module_4330);
+        close(fd);
+    }
+}
+#endif
+#endif
+
 static int is_primary_interface(const char *ifname)
 {
     //Treat NULL as primary interface to allow control
@@ -227,6 +292,10 @@ int is_wifi_driver_loaded() {
 #ifdef WIFI_DRIVER_MODULE_PATH
     FILE *proc;
     char line[sizeof(DRIVER_MODULE_TAG)+10];
+
+#ifdef XIAOMI_MIONE_WIFI
+    check_wifi_module();
+#endif
 #endif
 
     if (!property_get(DRIVER_PROP_NAME, driver_status, NULL)
@@ -271,6 +340,10 @@ int wifi_load_driver()
 
     property_set(DRIVER_PROP_NAME, "loading");
 
+#ifdef XIAOMI_MIONE_WIFI
+    check_wifi_module();
+#endif
+
 #ifdef WIFI_EXT_MODULE_PATH
     if (insmod(EXT_MODULE_PATH, EXT_MODULE_ARG) < 0)
         return -1;
@@ -281,6 +354,19 @@ int wifi_load_driver()
     snprintf(module_arg2, sizeof(module_arg2), "%s%s", DRIVER_MODULE_ARG, type == NULL ? "" : type);
 
     if (insmod(DRIVER_MODULE_PATH, module_arg2) < 0) {
+#elif defined(XIAOMI_MIONE_WIFI)
+    /* add mac argument for xiaomi bcm4330
+     * credit: huangqiwu, PeterCxy
+     * https://github.com/mirom/android_device_xiaomi_mione_plus/commit/cf62e83ee96d90f0735c56b85fb8e252574c644d
+     * https://github.com/mirom/android_hardware_libhardware_legacy/commit/56c719cf38ffdf94c51fd3e017249708d2a1aa7d
+     */
+    if(is_wifi_module_4330  && read_mac_ok == 0) {
+        const unsigned char *x = read_mac();
+        sprintf(module_arg_buf, "%s mac=0x%02x,0x%02x,0x%02x,0x%02x,0x%02x,0x%02x", DRIVER_MODULE_ARG, x[20], x[16], x[12], x[8], x[4], x[0]);
+        read_mac_ok = 1;
+    }
+
+    if (insmod(DRIVER_MODULE_PATH, is_wifi_module_4330 ? module_arg_buf : DRIVER_MODULE_ARG) < 0) {
 #else
     if (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) < 0) {
 #endif
@@ -323,6 +409,12 @@ int wifi_load_driver()
 
 int wifi_unload_driver()
 {
+#ifdef WIFI_DRIVER_MODULE_PATH
+#ifdef XIAOMI_MIONE_WIFI
+    check_wifi_module();
+#endif
+#endif
+
     usleep(200000); /* allow to finish interface down */
 #ifdef WIFI_DRIVER_MODULE_PATH
     if (rmmod(DRIVER_MODULE_NAME) == 0) {
@@ -569,6 +661,12 @@ int wifi_start_supplicant(int p2p_supported)
     unsigned serial = 0, i;
 #endif
 
+#ifdef WIFI_DRIVER_MODULE_PATH
+#ifdef XIAOMI_MIONE_WIFI
+    check_wifi_module();
+#endif
+#endif
+
     if (p2p_supported) {
         strcpy(supplicant_name, P2P_SUPPLICANT_NAME);
         strcpy(supplicant_prop_name, P2P_PROP_NAME);
@@ -920,13 +1018,29 @@ int wifi_command(const char *ifname, const char *command, char *reply, size_t *r
 
 const char *wifi_get_fw_path(int fw_type)
 {
+#ifdef XIAOMI_MIONE_WIFI
+    check_wifi_module();
+#endif
+
     switch (fw_type) {
     case WIFI_GET_FW_PATH_STA:
+#ifndef XIAOMI_MIONE_WIFI
         return WIFI_DRIVER_FW_PATH_STA;
+#else
+        return is_wifi_module_4330 ? WIFI_DRIVER_FW_PATH_STA_DHD : WIFI_DRIVER_FW_PATH_STA;
+#endif
     case WIFI_GET_FW_PATH_AP:
+#ifndef XIAOMI_MIONE_WIFI
         return WIFI_DRIVER_FW_PATH_AP;
+#else
+        return is_wifi_module_4330 ? WIFI_DRIVER_FW_PATH_AP_DHD : WIFI_DRIVER_FW_PATH_AP;
+#endif
     case WIFI_GET_FW_PATH_P2P:
+#ifndef XIAOMI_MIONE_WIFI
         return WIFI_DRIVER_FW_PATH_P2P;
+#else
+        return is_wifi_module_4330 ? WIFI_DRIVER_FW_PATH_P2P_DHD : WIFI_DRIVER_FW_PATH_P2P;
+#endif
     }
     return NULL;
 }
